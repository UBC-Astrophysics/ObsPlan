{"name":"Obsplan","tagline":"Create observation plan from LIGO/Virgo probability map and galaxy catalogues","body":"This package consists of three python scripts to work with LIGO/Virgo probability maps to generate an observing plan.\r\n\r\n# ObsPlan\r\n\r\nThis script takes the LIGO-Virgo Skymap (P(d|m)) and optionally a\r\ngalaxy-density map (P(m)) and finds the most likely fields to\r\nobserve (P(m|d)).  The fields are assumed to be healpix regions from a\r\ntesselation with a given value of nside (the value of nside\r\ndepends of the field of view of the telescope).\r\n\r\n  P(position|data) = P(position) P(data|position) / P(data)\r\n\r\n  P(position) is the galaxy density map ( P(m) )\r\n  \r\n  P(data|position) is the skymap from LIGO-Virgo ( P(d|m) )\r\n  \r\n  P(data) is constant with position so we neglect it.\r\n\r\n1) Load the skymap\r\n\r\n2) Load the optional galaxy density map\r\n\r\n  a) If one map has nside greater than the other, resample the map with the larger value of nside to that of the smaller.\r\n\r\n  b) Multiply the resulting maps together\r\n\r\n3) Resample the probability map to the value of nside parameter (if different)\r\n\r\n4) Sort the array by the probability \r\n\r\n5) Output the top N regions with healpix number, RA, Dec and probability\r\n\r\n  or \r\n\r\n  Output the regions that add to a given fraction of the total probability.\r\n\r\n  By default it would output the top ten regions, but you could set a\r\n  parameter less than one to do the fraction of the total or greater than\r\n  one to output N regions.\r\n\r\n# LIGOClient\r\n\r\nDownloads a probability map from the Grace Database and then passes it along to ObsPlan to generate an observation plan.\r\n\r\n# GalMap\r\n\r\nCreate a galaxy density map from a catalogue in FITS format.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}